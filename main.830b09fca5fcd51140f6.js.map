{"version":3,"sources":["webpack:///./index.js"],"names":["inputContainer","document","querySelector","countryList","clearBtn","searchResult","defaultModules","set","PNotifyDesktop","innerHTML","localStorage","getItem","value","addEventListener","debounce","fetch","then","data","json","length","error","title","text","delay","modules","Map","forEach","element","insertAdjacentHTML","name","flag","capital","population","languages","setItem","catch","err"],"mappings":"kHAAA,sFAQA,MAAMA,EAAiBC,SAASC,cAAc,oBACxCC,EAAcF,SAASC,cAAc,iBACrCE,EAAWH,SAASC,cAAc,cAClCG,EAAeJ,SAASC,cAAc,kBAE5CI,iBAAeC,IAAIC,EAAgB,IAEnCH,EAAaI,UAAYC,aAAaC,QAAQ,YAAc,GAE5DX,EAAeY,MAAQ,GAuFvBZ,EAAea,iBAAiB,QAASC,KArFzB,WACgB,IAAxBd,EAAeY,MAKnBG,MAAO,yCAAwCf,EAAeY,OACzDI,KAAKC,GAAQA,EAAKC,QAClBF,KAAKC,IAEF,GADAd,EAAYM,UAAY,GACpBQ,EAAKE,OAAS,GAAlB,CACuBC,gBAAM,CACrBC,MAAO,kBACPC,KAAM,oBACNC,MAAO,IACPC,QAAS,IAAIC,IAAI,IACVnB,iBACH,CAACE,EAAgB,aAK7BS,EAAKS,QAAQC,IACW,IAAhBV,EAAKE,SACLd,EAAaI,UAAY,GACzBJ,EAAauB,mBAAmB,YAAc,gCAE7CD,EAAQE,0CACCF,EAAQG,0CAEjBH,EAAQI,uCACLJ,EAAQK,8GAOZL,EAAQM,UAAUP,QAAQ,EAAGG,WACzB5B,SAASC,cAAc,cAAc0B,mBAAmB,YAAc,OAAMC,YAEhFnB,aAAawB,QAAQ,UAAW7B,EAAaI,YAG7CQ,EAAKE,OAAS,GAAKF,EAAKE,OAAS,KAEjChB,EAAYyB,mBAAmB,aAAe,+BAA8BD,EAAQE,aACpF5B,SAASC,cAAc,oBAAoBW,iBAAiB,QAAS,KACjER,EAAaI,UAAY,GACzBJ,EAAauB,mBAAmB,YAAc,gCAEjDD,EAAQE,0CACCF,EAAQG,0CAEjBH,EAAQI,uCACLJ,EAAQK,8GAORL,EAAQM,UAAUP,QAAQ,EAAGG,WACzB5B,SAASC,cAAc,cAAc0B,mBAAmB,YAAc,OAAMC,YAEhFnB,aAAawB,QAAQ,UAAW7B,EAAaI,kBAK5D0B,MAAMC,IACgBhB,gBAAM,CACrBC,MAAO,wBACPC,KAAM,oBACNC,MAAO,IACPC,QAAS,IAAIC,IAAI,IACVnB,iBACH,CAACE,EAAgB,UA3E7BL,EAAYM,UAAY,KAmF2B,MAM3DL,EAASS,iBAAiB,SAJV,WACZb,EAAeY,MAAQ,Q","file":"main.830b09fca5fcd51140f6.js","sourcesContent":["import './styles.css';\nimport debounce from \"../node_modules/lodash.debounce/index.js\";\nimport { error, defaultModules } from '../node_modules/@pnotify/core';\nimport * as PNotifyDesktop from '../node_modules/@pnotify/desktop';\nimport '../node_modules/@pnotify/core/dist/BrightTheme.css';\nimport \"../node_modules/@pnotify/core/dist/PNotify.css\";\n\n\nconst inputContainer = document.querySelector('.input-container');\nconst countryList = document.querySelector('.country-list');\nconst clearBtn = document.querySelector('.clear-btn');\nconst searchResult = document.querySelector('.result-search');\n\ndefaultModules.set(PNotifyDesktop, {});\n\nsearchResult.innerHTML = localStorage.getItem('country') || '';\n\ninputContainer.value = \"\";\n\nconst inputFn = function () {\n    if (inputContainer.value == '') {\n        countryList.innerHTML = \"\";\n        return\n    }\n\n    fetch(`https://restcountries.eu/rest/v2/name/${inputContainer.value}`)\n        .then(data => data.json())\n        .then(data => {\n            countryList.innerHTML = \"\";\n            if (data.length > 10) {\n                const errNotice2 = error({\n                    title: 'Too much result',\n                    text: \"Please, try again\",\n                    delay: 1000,\n                    modules: new Map([\n                        ...defaultModules,\n                        [PNotifyDesktop, {}\n                        ]])\n                })\n                return\n            }\n            data.forEach(element => {\n                if (data.length === 1) {\n                    searchResult.innerHTML = \"\";\n                    searchResult.insertAdjacentHTML('beforeend', `\n      \n      <h2 class=\"\">${element.name}</h2>\n      <img width=\"200\" src=\"${element.flag}\">\n      <ul>\n      <li>Capital: ${element.capital}</li>\n      <li>Population: ${element.population}</li>\n      <li>Languages:\n      <ul class=\"lang-list\"></ul>\n      </li>\n      </ul>\n      `);\n\n                    element.languages.forEach(({ name }) => {\n                        document.querySelector('.lang-list').insertAdjacentHTML('beforeend', `<li>${name}</li>`)\n                    })\n                    localStorage.setItem('country', searchResult.innerHTML);\n                }\n\n                if (data.length > 1 && data.length < 10) {\n\n                    countryList.insertAdjacentHTML('afterbegin', `<li class=\"countryListItem\">${element.name}</li>`)\n                    document.querySelector('.countryListItem').addEventListener('click', () => {\n                        searchResult.innerHTML = '';\n                        searchResult.insertAdjacentHTML('beforeend', `\n      \n      <h2 class=\"\">${element.name}</h2>\n      <img width=\"200\" src=\"${element.flag}\">\n      <ul>\n      <li>Capital: ${element.capital}</li>\n      <li>Population: ${element.population}</li>\n      <li>Languages:\n      <ul class=\"lang-list\"></ul>\n      </li>\n      </ul>\n      `);\n\n                        element.languages.forEach(({ name }) => {\n                            document.querySelector('.lang-list').insertAdjacentHTML('beforeend', `<li>${name}</li>`);\n                        })\n                        localStorage.setItem('country', searchResult.innerHTML);\n                    })\n                };\n            })\n        })\n        .catch(err => {\n            const errNotice1 = error({\n                title: \"Enter correct country\",\n                text: \"Please, try again\",\n                delay: 1000,\n                modules: new Map([\n                    ...defaultModules,\n                    [PNotifyDesktop, {}]\n                ])\n            })\n        }\n\n        )\n}\n\ninputContainer.addEventListener('input', debounce(inputFn, 500));\n\nconst cleaner = function () {\n    inputContainer.value = '';\n}\n\nclearBtn.addEventListener('click', cleaner);\n\n\n"],"sourceRoot":""}