{"version":3,"sources":["webpack:///./index.js"],"names":["inputContainer","document","querySelector","countryList","clearBtn","searchResult","defaultModules","set","PNotifyDesktop","innerHTML","localStorage","getItem","value","addEventListener","debounce","fetch","then","data","json","forEach","element","length","insertAdjacentHTML","name","flag","capital","population","setItem","languages","error","title","text","delay","modules","Map","catch","err"],"mappings":"kHAAA,sFAQA,MAAMA,EAAiBC,SAASC,cAAc,oBACxCC,EAAcF,SAASC,cAAc,iBACrCE,EAAWH,SAASC,cAAc,cAClCG,EAAeJ,SAASC,cAAc,kBAE5CI,iBAAeC,IAAIC,EAAgB,IAEnCH,EAAaI,UAAYC,aAAaC,QAAQ,YAAc,GAE5DX,EAAeY,MAAQ,GAqFvBZ,EAAea,iBAAiB,QAASC,KAnFzB,WACgB,IAAxBd,EAAeY,QACfT,EAAYM,UAAY,IAG5BM,MAAO,yCAAwCf,EAAeY,OACzDI,KAAKC,GAAQA,EAAKC,QAClBF,KAAKC,IACFd,EAAYM,UAAY,GACxBQ,EAAKE,QAAQC,IA8CT,GA7CoB,IAAhBH,EAAKI,SACLhB,EAAaI,UAAY,GACzBJ,EAAaiB,mBAAmB,YAAc,gCAE7CF,EAAQG,0CACCH,EAAQI,0CAEjBJ,EAAQK,uCACLL,EAAQM,8GAMZhB,aAAaiB,QAAQ,UAAWtB,EAAaI,WAC7CW,EAAQQ,UAAUT,QAAQ,EAAGI,WACzBtB,SAASC,cAAc,cAAcoB,mBAAmB,YAAc,OAAMC,aAIhFN,EAAKI,OAAS,GAAKJ,EAAKI,OAAS,KAEjClB,EAAYmB,mBAAmB,aAAe,+BAA8BF,EAAQG,aACpFtB,SAASC,cAAc,oBAAoBW,iBAAiB,QAAS,KACjER,EAAaI,UAAY,GACzBJ,EAAaiB,mBAAmB,YAAc,gCAEjDF,EAAQG,0CACCH,EAAQI,0CAEjBJ,EAAQK,uCACLL,EAAQM,8GAMRhB,aAAaiB,QAAQ,UAAWtB,EAAaI,WAC7CW,EAAQQ,UAAUT,QAAQ,EAAGI,WACzBtB,SAASC,cAAc,cAAcoB,mBAAmB,YAAc,OAAMC,eAMpFN,EAAKI,OAAS,GAAlB,CACuBQ,gBAAM,CACrBC,MAAO,kBACPC,KAAM,oBACNC,MAAO,KACPC,QAAS,IAAIC,IAAI,IACV5B,iBACH,CAACE,EAAgB,kBAOpC2B,MAAMC,IACgBP,gBAAM,CACrBC,MAAO,wBACPC,KAAM,oBACNC,MAAO,KACPC,QAAS,IAAIC,IAAI,IACV5B,iBACH,CAACE,EAAgB,YAOsB,MAM3DJ,EAASS,iBAAiB,SAJV,WACZb,EAAeY,MAAQ,Q","file":"main.26f1ed4a038d21c53640.js","sourcesContent":["import './styles.css';\nimport debounce from \"../node_modules/lodash.debounce/index.js\";\nimport { error, defaultModules } from '../node_modules/@pnotify/core';\nimport * as PNotifyDesktop from '../node_modules/@pnotify/desktop';\nimport '../node_modules/@pnotify/core/dist/BrightTheme.css';\nimport \"../node_modules/@pnotify/core/dist/PNotify.css\";\n\n\nconst inputContainer = document.querySelector('.input-container');\nconst countryList = document.querySelector('.country-list');\nconst clearBtn = document.querySelector('.clear-btn');\nconst searchResult = document.querySelector('.result-search');\n\ndefaultModules.set(PNotifyDesktop, {});\n\nsearchResult.innerHTML = localStorage.getItem('country') || '';\n\ninputContainer.value = \"\";\n\nconst inputFn = function () {\n    if (inputContainer.value == '') {\n        countryList.innerHTML = \"\";\n    }\n\n    fetch(`https://restcountries.eu/rest/v2/name/${inputContainer.value}`)\n        .then(data => data.json())\n        .then(data => {\n            countryList.innerHTML = \"\";\n            data.forEach(element => {\n                if (data.length === 1) {\n                    searchResult.innerHTML = \"\";\n                    searchResult.insertAdjacentHTML('beforeend', `\n      \n      <h2 class=\"\">${element.name}</h2>\n      <img width=\"200\" src=\"${element.flag}\">\n      <ul>\n      <li>Capital: ${element.capital}</li>\n      <li>Population: ${element.population}</li>\n      <li>Languages:\n      <ul class=\"lang-list\"></ul>\n      </li>\n      </ul>\n      `);\n                    localStorage.setItem('country', searchResult.innerHTML);\n                    element.languages.forEach(({ name }) => {\n                        document.querySelector('.lang-list').insertAdjacentHTML('beforeend', `<li>${name}</li>`)\n                    })\n                }\n\n                if (data.length > 1 && data.length < 10) {\n\n                    countryList.insertAdjacentHTML('afterbegin', `<li class=\"countryListItem\">${element.name}</li>`)\n                    document.querySelector('.countryListItem').addEventListener('click', () => {\n                        searchResult.innerHTML = '';\n                        searchResult.insertAdjacentHTML('beforeend', `\n      \n      <h2 class=\"\">${element.name}</h2>\n      <img width=\"200\" src=\"${element.flag}\">\n      <ul>\n      <li>Capital: ${element.capital}</li>\n      <li>Population: ${element.population}</li>\n      <li>Languages:\n      <ul class=\"lang-list\"></ul>\n      </li>\n      </ul>\n      `);\n                        localStorage.setItem('country', searchResult.innerHTML);\n                        element.languages.forEach(({ name }) => {\n                            document.querySelector('.lang-list').insertAdjacentHTML('beforeend', `<li>${name}</Li>`)\n                        })\n\n                    })\n                };\n\n                if (data.length > 10) {\n                    const errNotice2 = error({\n                        title: 'Too much result',\n                        text: \"Please, try again\",\n                        delay: 1700,\n                        modules: new Map([\n                            ...defaultModules,\n                            [PNotifyDesktop, {}\n                            ]])\n                    })\n                    return\n                }\n            })\n        })\n        .catch(err => {\n            const errNotice1 = error({\n                title: \"Enter correct country\",\n                text: \"Please, try again\",\n                delay: 1700,\n                modules: new Map([\n                    ...defaultModules,\n                    [PNotifyDesktop, {}]\n                ])\n\n            })\n        })\n}\n\ninputContainer.addEventListener('input', debounce(inputFn, 500));\n\nconst cleaner = function () {\n    inputContainer.value = '';\n}\n\nclearBtn.addEventListener('click', cleaner);\n\n\n"],"sourceRoot":""}